version: "3.8"
services:
  flog:
    image: mingrammer/flog:0.4.3
    container_name: flog
    command: ["flog", "--loop", "--format", "json"]
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  vector_raw:
    image: timberio/vector:nightly-alpine
    container_name: vector_raw
    volumes:
    - ./vector:/etc/vector:ro
    - /var/run/docker.sock:/var/run/docker.sock
    command:
    - --config
    - /etc/vector/vector-raw.toml
    restart: always
    depends_on:
    - flog
  vector_transformed:
    image: timberio/vector:nightly-alpine
    container_name: vector_transformed
    volumes:
    - ./vector:/etc/vector:ro
    - /var/run/docker.sock:/var/run/docker.sock
    command:
    - --config
    - /etc/vector/vector-transformed.toml
    restart: always
    depends_on:
    - flog
  prometheus:
    image: prom/prometheus:v2.22.0
    container_name: prometheus
    ports:
    - 9090:9090
    volumes:
    - prometheus_data:/prometheus
    - ./prometheus:/etc/prometheus:ro
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    restart: always
    depends_on:
    - vector_raw
    - vector_transformed
  grafana:
    image: grafana/grafana:7.2.1
    container_name: grafana
    ports:
    - 3000:3000
    volumes:
    - grafana_data:/var/lib/grafana
    - ./grafana/provisioning:/etc/grafana/provisioning:ro
    env_file:
    - ./grafana/config.monitoring
    user: "472"
    restart: always
    depends_on:
    - prometheus
volumes:
  prometheus_data: {}
  grafana_data: {}